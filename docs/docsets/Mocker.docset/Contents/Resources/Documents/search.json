{"Structs/Mock.html#/s:OV6Mocker4Mock10HTTPMethod":{"name":"HTTPMethod","abstract":"<p>HTTP method definitions.</p>","parent_name":"Mock"},"Structs/Mock.html#/s:OV6Mocker4Mock11ContentType":{"name":"ContentType","abstract":"<p>The types of content of a request. Will be used as Content-Type header inside a <code>Mock</code>.</p>","parent_name":"Mock"},"Structs/Mock.html#/s:vV6Mocker4Mock11contentTypeOS0_11ContentType":{"name":"contentType","abstract":"<p>The type of the data which is returned.</p>","parent_name":"Mock"},"Structs/Mock.html#/s:vV6Mocker4Mock7headersGVs10DictionarySSSS_":{"name":"headers","abstract":"<p>The headers to send back with the response.</p>","parent_name":"Mock"},"Structs/Mock.html#/s:vV6Mocker4Mock10statusCodeSi":{"name":"statusCode","abstract":"<p>The HTTP status code to return with the response.</p>","parent_name":"Mock"},"Structs/Mock.html#/s:vV6Mocker4Mock3urlV10Foundation3URL":{"name":"url","abstract":"<p>The URL value generated based on the Mock data.</p>","parent_name":"Mock"},"Structs/Mock.html#/s:vV6Mocker4Mock14fileExtensionsGSqGSaSS__":{"name":"fileExtensions","abstract":"<p>The file extensions to match for.</p>","parent_name":"Mock"},"Structs/Mock.html#/s:FV6Mocker4MockcFT11contentTypeOS0_11ContentType10statusCodeSi4dataGVs10DictionaryOS0_10HTTPMethodV10Foundation4Data_17additionalHeadersGS2_SSSS__S0_":{"name":"init(contentType:statusCode:data:additionalHeaders:)","abstract":"<p>Creates a <code>Mock</code> for the given data type. The mock will be automatically matched based on a URL created from the given parameters.</p>","parent_name":"Mock"},"Structs/Mock.html#/s:FV6Mocker4MockcFT3urlV10Foundation3URL11contentTypeOS0_11ContentType10statusCodeSi4dataGVs10DictionaryOS0_10HTTPMethodVS1_4Data_17additionalHeadersGS4_SSSS__S0_":{"name":"init(url:contentType:statusCode:data:additionalHeaders:)","abstract":"<p>Creates a <code>Mock</code> for the given URL.</p>","parent_name":"Mock"},"Structs/Mock.html#/s:FV6Mocker4MockcFT14fileExtensionsGSaSS_11contentTypeOS0_11ContentType10statusCodeSi4dataGVs10DictionaryOS0_10HTTPMethodV10Foundation4Data_17additionalHeadersGS2_SSSS__S0_":{"name":"init(fileExtensions:contentType:statusCode:data:additionalHeaders:)","abstract":"<p>Creates a <code>Mock</code> for the given file extensions. The mock will only be used for urls matching the extension.</p>","parent_name":"Mock"},"Structs/Mock.html#/s:ZFPs9Equatableoi2eeFTxx_Sb":{"name":"==(_:_:)","parent_name":"Mock"},"Structs/Mocker.html#/s:ZvV6Mocker6Mocker11httpVersionOS0_11HTTPVersion":{"name":"httpVersion","abstract":"<p>The HTTP Version to use in the mocked response.</p>","parent_name":"Mocker"},"Structs/Mocker.html#/s:ZFV6Mocker6Mocker8registerFVS_4MockT_":{"name":"register(_:)","abstract":"<p>Register new Mocked data. If a mock for the same URL and HTTPMethod exists, it will be overwritten.</p>","parent_name":"Mocker"},"Structs/Mocker.html#/s:ZFV6Mocker6Mocker4mockFT3forV10Foundation10URLRequest_GSqVS_4Mock_":{"name":"mock(for:)","abstract":"<p>Retrieve a Mock for the given request. Matches on <code>request.url</code> and <code>request.httpMethod</code>.</p>","parent_name":"Mocker"},"Structs/Mocker.html":{"name":"Mocker","abstract":"<p>Can be used for registering Mocked data, returned by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/MockingURLProtocol.html\">MockingURLProtocol</a></code>.</p>"},"Structs/Mock.html":{"name":"Mock","abstract":"<p>A Mock which can be used for mocking data requests with the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Mocker.html\">Mocker</a></code> by calling <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Mocker.html#/s:ZFV6Mocker6Mocker8registerFVS_4MockT_\">Mocker.register(...)</a></code>.</p>"},"Classes/MockingURLProtocol.html#/s:FC6Mocker18MockingURLProtocol12startLoadingFT_T_":{"name":"startLoading()","abstract":"<p>Returns Mocked data based on the mocks register in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Mocker.html\">Mocker</a></code>. Will end up in an error when no Mock data is found for the request.</p>","parent_name":"MockingURLProtocol"},"Classes/MockingURLProtocol.html#/s:ZFC6Mocker18MockingURLProtocol7canInitFT4withV10Foundation10URLRequest_Sb":{"name":"canInit(with:)","abstract":"<p>Overrides needed to define a valid inheritance of URLProtocol.</p>","parent_name":"MockingURLProtocol"},"Classes/MockingURLProtocol.html#/s:FC6Mocker18MockingURLProtocol11stopLoadingFT_T_":{"name":"stopLoading()","abstract":"<p>Implementation does nothing, but is needed for a valid inheritance of URLProtocol.</p>","parent_name":"MockingURLProtocol"},"Classes/MockingURLProtocol.html#/s:ZFC6Mocker18MockingURLProtocol16canonicalRequestFT3forV10Foundation10URLRequest_S2_":{"name":"canonicalRequest(for:)","abstract":"<p>Simply sends back the passed request. Implementation is needed for a valid inheritance of URLProtocol.</p>","parent_name":"MockingURLProtocol"},"Classes/MockingURLProtocol.html":{"name":"MockingURLProtocol","abstract":"<p>The protocol which can be used to send Mocked data back. Use the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Mocker.html\">Mocker</a></code> to register <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Mock.html\">Mock</a></code> data</p>"},"Classes.html":{"name":"Classes","abstract":"The following classes are available globally."},"Structs.html":{"name":"Structs","abstract":"The following structs are available globally."}}