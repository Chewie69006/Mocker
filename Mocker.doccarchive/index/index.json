{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mocker\/mockingurlprotocol\/startloading()","title":"func startLoading()","type":"method"},{"path":"\/documentation\/mocker\/mockingurlprotocol\/stoploading()","title":"func stopLoading()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mocker\/mockingurlprotocol\/caninit(with:)","title":"class func canInit(with: URLRequest) -> Bool","type":"method"},{"path":"\/documentation\/mocker\/mockingurlprotocol\/canonicalrequest(for:)","title":"class func canonicalRequest(for: URLRequest) -> URLRequest","type":"method"}],"path":"\/documentation\/mocker\/mockingurlprotocol","title":"MockingURLProtocol","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mocker\/mock\/datatype-swift.struct\/init(name:headervalue:)","title":"init(name: String, headerValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mocker\/mock\/datatype-swift.struct\/headervalue","title":"let headerValue: String","type":"property"},{"path":"\/documentation\/mocker\/mock\/datatype-swift.struct\/name","title":"let name: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mocker\/mock\/datatype-swift.struct\/html","title":"static let html: Mock.DataType","type":"property"},{"path":"\/documentation\/mocker\/mock\/datatype-swift.struct\/imagepng","title":"static let imagePNG: Mock.DataType","type":"property"},{"path":"\/documentation\/mocker\/mock\/datatype-swift.struct\/json","title":"static let json: Mock.DataType","type":"property"},{"path":"\/documentation\/mocker\/mock\/datatype-swift.struct\/mp4","title":"static let mp4: Mock.DataType","type":"property"},{"path":"\/documentation\/mocker\/mock\/datatype-swift.struct\/pdf","title":"static let pdf: Mock.DataType","type":"property"},{"path":"\/documentation\/mocker\/mock\/datatype-swift.struct\/zip","title":"static let zip: Mock.DataType","type":"property"}],"path":"\/documentation\/mocker\/mock\/datatype-swift.struct","title":"Mock.DataType","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mocker\/mock\/==(_:_:)","title":"static func == (Mock, Mock) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mocker\/mock\/init(datatype:statuscode:data:additionalheaders:)","title":"init(dataType: DataType, statusCode: Int, data: [HTTPMethod : Data], additionalHeaders: [String : String])","type":"init"},{"path":"\/documentation\/mocker\/mock\/init(fileextensions:datatype:statuscode:data:additionalheaders:)","title":"init(fileExtensions: String..., dataType: DataType, statusCode: Int, data: [HTTPMethod : Data], additionalHeaders: [String : String])","type":"init"},{"path":"\/documentation\/mocker\/mock\/init(url:ignorequery:cachestoragepolicy:datatype:statuscode:data:additionalheaders:requesterror:)","title":"init(url: URL, ignoreQuery: Bool, cacheStoragePolicy: URLCache.StoragePolicy, dataType: DataType, statusCode: Int, data: [HTTPMethod : Data], additionalHeaders: [String : String], requestError: Error?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mocker\/mock\/cachestoragepolicy","title":"var cacheStoragePolicy: URLCache.StoragePolicy","type":"property"},{"path":"\/documentation\/mocker\/mock\/completion","title":"var completion: (() -> Void)?","type":"property"},{"path":"\/documentation\/mocker\/mock\/datatype-swift.property","title":"let dataType: DataType","type":"property"},{"path":"\/documentation\/mocker\/mock\/delay","title":"var delay: DispatchTimeInterval?","type":"property"},{"path":"\/documentation\/mocker\/mock\/fileextensions","title":"let fileExtensions: [String]?","type":"property"},{"path":"\/documentation\/mocker\/mock\/headers","title":"let headers: [String : String]","type":"property"},{"path":"\/documentation\/mocker\/mock\/ignorequery","title":"let ignoreQuery: Bool","type":"property"},{"path":"\/documentation\/mocker\/mock\/onrequest-swift.property","title":"var onRequest: OnRequest?","type":"property"},{"path":"\/documentation\/mocker\/mock\/request","title":"let request: URLRequest","type":"property"},{"path":"\/documentation\/mocker\/mock\/requesterror","title":"let requestError: Error?","type":"property"},{"path":"\/documentation\/mocker\/mock\/statuscode","title":"let statusCode: Int","type":"property"},{"path":"\/documentation\/mocker\/mock\/url","title":"var url: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mocker\/mock\/register()","title":"func register()","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mocker\/mock\/onrequest-swift.typealias","title":"Mock.OnRequest","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mocker\/mock\/httpmethod\/connect","title":"case connect","type":"case"},{"path":"\/documentation\/mocker\/mock\/httpmethod\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/mocker\/mock\/httpmethod\/get","title":"case get","type":"case"},{"path":"\/documentation\/mocker\/mock\/httpmethod\/head","title":"case head","type":"case"},{"path":"\/documentation\/mocker\/mock\/httpmethod\/options","title":"case options","type":"case"},{"path":"\/documentation\/mocker\/mock\/httpmethod\/patch","title":"case patch","type":"case"},{"path":"\/documentation\/mocker\/mock\/httpmethod\/post","title":"case post","type":"case"},{"path":"\/documentation\/mocker\/mock\/httpmethod\/put","title":"case put","type":"case"},{"path":"\/documentation\/mocker\/mock\/httpmethod\/trace","title":"case trace","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mocker\/mock\/httpmethod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mocker\/mock\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mocker\/mock\/httpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mocker\/mock\/httpmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mocker\/mock\/httpmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mocker\/mock\/httpmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mocker\/mock\/httpmethod","title":"Mock.HTTPMethod","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mocker\/mock\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mocker\/mock\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mocker\/mock","title":"Mock","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mocker\/mocker\/ignoredurls","title":"var ignoredURLs: [URL]","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mocker\/mocker\/httpversion-swift.type.property","title":"static var httpVersion: HTTPVersion","type":"property"},{"path":"\/documentation\/mocker\/mocker\/mode-swift.type.property","title":"static var mode: Mode","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mocker\/mocker\/ignore(_:ignorequery:)","title":"static func ignore(URL, ignoreQuery: Bool)","type":"method"},{"path":"\/documentation\/mocker\/mocker\/register(_:)","title":"static func register(Mock)","type":"method"},{"path":"\/documentation\/mocker\/mocker\/removeall()","title":"static func removeAll()","type":"method"},{"path":"\/documentation\/mocker\/mocker\/shouldhandle(_:)","title":"static func shouldHandle(URLRequest) -> Bool","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mocker\/mocker\/httpversion-swift.enum\/http1_0","title":"case http1_0","type":"case"},{"path":"\/documentation\/mocker\/mocker\/httpversion-swift.enum\/http1_1","title":"case http1_1","type":"case"},{"path":"\/documentation\/mocker\/mocker\/httpversion-swift.enum\/http2_0","title":"case http2_0","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mocker\/mocker\/httpversion-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mocker\/mocker\/httpversion-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mocker\/mocker\/httpversion-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mocker\/mocker\/httpversion-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mocker\/mocker\/httpversion-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mocker\/mocker\/httpversion-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mocker\/mocker\/httpversion-swift.enum","title":"Mocker.HTTPVersion","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mocker\/mocker\/mode-swift.enum\/optin","title":"case optin","type":"case"},{"path":"\/documentation\/mocker\/mocker\/mode-swift.enum\/optout","title":"case optout","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mocker\/mocker\/mode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mocker\/mocker\/mode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mocker\/mocker\/mode-swift.enum","title":"Mocker.Mode","type":"enum"}],"path":"\/documentation\/mocker\/mocker","title":"Mocker","type":"struct"}],"path":"\/documentation\/mocker","title":"Mocker","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}