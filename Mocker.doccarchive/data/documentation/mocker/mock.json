{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mock"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mocker\/mock"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Mocker\/SQ"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Mocker\/documentation\/Mocker\/Mock","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A Mock which can be used for mocking data requests with the "},{"type":"codeVoice","code":"Mocker"},{"type":"text","text":" by calling "},{"type":"codeVoice","code":"Mocker.register(...)"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mock"}],"title":"Mock","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:6Mocker4MockV","modules":[{"name":"Mocker"}],"navigatorTitle":[{"kind":"identifier","text":"Mock"}]},"hierarchy":{"paths":[["doc:\/\/Mocker\/documentation\/Mocker"]]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/Mocker\/documentation\/Mocker\/Mock\/DataType-swift.struct"]},{"title":"Operators","identifiers":["doc:\/\/Mocker\/documentation\/Mocker\/Mock\/==(_:_:)"]},{"title":"Initializers","identifiers":["doc:\/\/Mocker\/documentation\/Mocker\/Mock\/init(dataType:statusCode:data:additionalHeaders:)","doc:\/\/Mocker\/documentation\/Mocker\/Mock\/init(fileExtensions:dataType:statusCode:data:additionalHeaders:)","doc:\/\/Mocker\/documentation\/Mocker\/Mock\/init(url:ignoreQuery:cacheStoragePolicy:dataType:statusCode:data:additionalHeaders:requestError:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Mocker\/documentation\/Mocker\/Mock\/cacheStoragePolicy","doc:\/\/Mocker\/documentation\/Mocker\/Mock\/completion","doc:\/\/Mocker\/documentation\/Mocker\/Mock\/dataType-swift.property","doc:\/\/Mocker\/documentation\/Mocker\/Mock\/delay","doc:\/\/Mocker\/documentation\/Mocker\/Mock\/fileExtensions","doc:\/\/Mocker\/documentation\/Mocker\/Mock\/headers","doc:\/\/Mocker\/documentation\/Mocker\/Mock\/ignoreQuery","doc:\/\/Mocker\/documentation\/Mocker\/Mock\/onRequest-swift.property","doc:\/\/Mocker\/documentation\/Mocker\/Mock\/request","doc:\/\/Mocker\/documentation\/Mocker\/Mock\/requestError","doc:\/\/Mocker\/documentation\/Mocker\/Mock\/statusCode","doc:\/\/Mocker\/documentation\/Mocker\/Mock\/url"]},{"title":"Instance Methods","identifiers":["doc:\/\/Mocker\/documentation\/Mocker\/Mock\/register()"]},{"title":"Type Aliases","identifiers":["doc:\/\/Mocker\/documentation\/Mocker\/Mock\/OnRequest-swift.typealias"]},{"title":"Enumerations","identifiers":["doc:\/\/Mocker\/documentation\/Mocker\/Mock\/HTTPMethod"]},{"title":"Default Implementations","identifiers":["doc:\/\/Mocker\/documentation\/Mocker\/Mock\/Equatable-Implementations"],"generated":true}],"references":{"doc://Mocker/documentation/Mocker/Mock/ignoreQuery":{"role":"symbol","title":"ignoreQuery","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ignoreQuery"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"true"},{"type":"text","text":", checking the URL will ignore the query and match only for the scheme, host and path."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/ignoreQuery","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/ignorequery"},"doc://Mocker/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/Mocker\/SQ"},"doc://Mocker/documentation/Mocker/Mock/dataType-swift.property":{"role":"symbol","title":"dataType","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"dataType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DataType","preciseIdentifier":"s:6Mocker4MockV8DataTypeV"}],"abstract":[{"type":"text","text":"The type of the data which is returned."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/dataType-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/datatype-swift.property"},"doc://Mocker/documentation/Mocker/Mock/delay":{"role":"symbol","title":"delay","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"delay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchTimeInterval","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Add a delay to a certain mock, which makes the response returned later."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/delay","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/delay"},"doc://Mocker/documentation/Mocker/Mock/completion":{"role":"symbol","title":"completion","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"completion"},{"kind":"text","text":": (() -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?"}],"abstract":[{"type":"text","text":"The callback which will be executed everytime this "},{"type":"codeVoice","code":"Mock"},{"type":"text","text":" was completed. Can be used within unit tests for validating that a request has been executed. The callback must be set before calling "},{"type":"codeVoice","code":"register"},{"type":"text","text":"."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/completion","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/completion"},"doc://Mocker/documentation/Mocker/Mock/DataType-swift.struct":{"role":"symbol","title":"Mock.DataType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataType"}],"abstract":[{"type":"text","text":"The types of content of a request. Will be used as Content-Type header inside a "},{"type":"codeVoice","code":"Mock"},{"type":"text","text":"."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/DataType-swift.struct","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DataType"}],"url":"\/documentation\/mocker\/mock\/datatype-swift.struct"},"doc://Mocker/documentation/Mocker/Mock/url":{"role":"symbol","title":"url","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"}],"abstract":[{"type":"text","text":"The URL value generated based on the Mock data. Force unwrapped on purpose. If you access this URL while itâ€™s not set, this is a programming error."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/url","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/url"},"doc://Mocker/documentation/Mocker/Mock/register()":{"role":"symbol","title":"register()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Registers the mock with the shared "},{"type":"codeVoice","code":"Mocker"},{"type":"text","text":"."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/register()","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/register()"},"doc://Mocker/documentation/Mocker/Mock/onRequest-swift.property":{"role":"symbol","title":"onRequest","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"onRequest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"OnRequest","preciseIdentifier":"s:6Mocker4MockV9OnRequesta"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The callback which will be executed everytime this "},{"type":"codeVoice","code":"Mock"},{"type":"text","text":" was started. Can be used within unit tests for validating that a request has been started. The callback must be set before calling "},{"type":"codeVoice","code":"register"},{"type":"text","text":"."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/onRequest-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/onrequest-swift.property"},"doc://Mocker/documentation/Mocker/Mock/init(fileExtensions:dataType:statusCode:data:additionalHeaders:)":{"role":"symbol","title":"init(fileExtensions:dataType:statusCode:data:additionalHeaders:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fileExtensions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"dataType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DataType","preciseIdentifier":"s:6Mocker4MockV8DataTypeV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"statusCode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"HTTPMethod","preciseIdentifier":"s:6Mocker4MockV10HTTPMethodO"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"additionalHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"])"}],"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"Mock"},{"type":"text","text":" for the given file extensions. The mock will only be used for urls matching the extension."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/init(fileExtensions:dataType:statusCode:data:additionalHeaders:)","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/init(fileextensions:datatype:statuscode:data:additionalheaders:)"},"doc://Mocker/documentation/Mocker/Mock/headers":{"role":"symbol","title":"headers","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"headers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"The headers to send back with the response."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/headers","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/headers"},"doc://Mocker/documentation/Mocker/Mock/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/mocker\/mock\/equatable-implementations"},"doc://Mocker/documentation/Mocker/Mock/cacheStoragePolicy":{"role":"symbol","title":"cacheStoragePolicy","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cacheStoragePolicy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLCache","preciseIdentifier":"c:objc(cs)NSURLCache"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StoragePolicy","preciseIdentifier":"c:@E@NSURLCacheStoragePolicy"}],"abstract":[{"type":"text","text":"Allow response cache."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/cacheStoragePolicy","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/cachestoragepolicy"},"doc://Mocker/documentation/Mocker/Mock/OnRequest-swift.typealias":{"role":"symbol","title":"Mock.OnRequest","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OnRequest"}],"abstract":[],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/OnRequest-swift.typealias","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OnRequest"}],"url":"\/documentation\/mocker\/mock\/onrequest-swift.typealias"},"doc://Mocker/documentation/Mocker/Mock/statusCode":{"role":"symbol","title":"statusCode","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"statusCode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"The HTTP status code to return with the response."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/statusCode","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/statuscode"},"doc://Mocker/documentation/Mocker/Mock/requestError":{"role":"symbol","title":"requestError","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestError"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"If set, the error that URLProtocol will report as a result rather than returning data from the mock"}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/requestError","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/requesterror"},"doc://Mocker/documentation/Mocker/Mock/init(url:ignoreQuery:cacheStoragePolicy:dataType:statusCode:data:additionalHeaders:requestError:)":{"role":"symbol","title":"init(url:ignoreQuery:cacheStoragePolicy:dataType:statusCode:data:additionalHeaders:requestError:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ignoreQuery"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cacheStoragePolicy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLCache","preciseIdentifier":"c:objc(cs)NSURLCache"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StoragePolicy","preciseIdentifier":"c:@E@NSURLCacheStoragePolicy"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dataType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DataType","preciseIdentifier":"s:6Mocker4MockV8DataTypeV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"statusCode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"HTTPMethod","preciseIdentifier":"s:6Mocker4MockV10HTTPMethodO"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"additionalHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"requestError"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"Mock"},{"type":"text","text":" for the given URL."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/init(url:ignoreQuery:cacheStoragePolicy:dataType:statusCode:data:additionalHeaders:requestError:)","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/init(url:ignorequery:cachestoragepolicy:datatype:statuscode:data:additionalheaders:requesterror:)"},"doc://Mocker/documentation/Mocker/Mock":{"role":"symbol","title":"Mock","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mock"}],"abstract":[{"type":"text","text":"A Mock which can be used for mocking data requests with the "},{"type":"codeVoice","code":"Mocker"},{"type":"text","text":" by calling "},{"type":"codeVoice","code":"Mocker.register(...)"},{"type":"text","text":"."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mock"}],"url":"\/documentation\/mocker\/mock"},"doc://Mocker/documentation/Mocker/Mock/request":{"role":"symbol","title":"request","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLRequest","preciseIdentifier":"s:10Foundation10URLRequestV"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"URLRequest"},{"type":"text","text":" to use if you did not set a specific URL."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/request","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/request"},"doc://Mocker/documentation/Mocker/Mock/fileExtensions":{"role":"symbol","title":"fileExtensions","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"fileExtensions"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]?"}],"abstract":[{"type":"text","text":"The file extensions to match for."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/fileExtensions","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/fileextensions"},"doc://Mocker/documentation/Mocker/Mock/==(_:_:)":{"role":"symbol","title":"==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Mock","preciseIdentifier":"s:6Mocker4MockV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Mock","preciseIdentifier":"s:6Mocker4MockV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/==(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/==(_:_:)"},"doc://Mocker/documentation/Mocker":{"role":"collection","title":"Mocker","abstract":[],"identifier":"doc:\/\/Mocker\/documentation\/Mocker","kind":"symbol","type":"topic","url":"\/documentation\/mocker"},"doc://Mocker/documentation/Mocker/Mock/init(dataType:statusCode:data:additionalHeaders:)":{"role":"symbol","title":"init(dataType:statusCode:data:additionalHeaders:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dataType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DataType","preciseIdentifier":"s:6Mocker4MockV8DataTypeV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"statusCode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"HTTPMethod","preciseIdentifier":"s:6Mocker4MockV10HTTPMethodO"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"additionalHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"])"}],"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"Mock"},{"type":"text","text":" for the given data type. The mock will be automatically matched based on a URL created from the given parameters."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/init(dataType:statusCode:data:additionalHeaders:)","kind":"symbol","type":"topic","url":"\/documentation\/mocker\/mock\/init(datatype:statuscode:data:additionalheaders:)"},"doc://Mocker/documentation/Mocker/Mock/HTTPMethod":{"role":"symbol","title":"Mock.HTTPMethod","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPMethod"}],"abstract":[{"type":"text","text":"HTTP method definitions."}],"identifier":"doc:\/\/Mocker\/documentation\/Mocker\/Mock\/HTTPMethod","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPMethod"}],"url":"\/documentation\/mocker\/mock\/httpmethod"}}}